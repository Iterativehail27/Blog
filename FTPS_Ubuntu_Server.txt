So, today I was able to set up an FTP server secured over TLSv1.2 using a couple of programs such as filezilla and vsftpd. A couple of things that I did not know beforehand was that I would be adding bash code into the vsftpd.conf file that wasn't directly referenced in the man pages for the program.

A couple of the commands that I added to the vsftpd.conf file that weren't explicitly in the default config file were as follows:
ssl_tlsv1=YES, ssl_sslv2=NO, ssl_sslv3=NO, require_ssl_reuse=NO, ssl_ciphers=HIGH, user_sub_token=$USER, local_root=/home/$USER/ftp, pasv_min_port=40000, pasv_max_port=50000, userlist_enable=YES, userlist_file=/etc/vsftpd.userlist, userlist_deny=NO, listen_port=990 and implicit_ssl=YES.

I learned a lot about setting up TLS including how to self-sign a certificate, how to reference the certificate for the vsftpd daemon to be able to use it when needed. I also learned that FTP operates either implicitly or explicitly the former requiring control messages to go over port 990 to establish a connection and the latter uses the default port 21.
Going forward, what I discovered was that implicit FTPS has no standardized method of being configured as far as RFCs go, but explicit FTP is standardized and so going forward I should use explicit FTP to increase compatibility between different networking architecure.
I learned how to open ports in a config file as well and how to setup the uncomplicated firewall (UFW) which is preinstalled in ubuntu, to allow traffic over both ipv4 and ipv6 across specific ports because it implicitly denies anything not specified.
Lastly, I found out that filezilla allows you to set the minimal version of TLS allowed to be used, thus creating a way to stop insecure connections from ever happening on the client side without too much effort, however, as a good security practitioner I will also configure the serverside of the equation with minimum acceptable secure protocols.

while I was having trouble navigating around the ubuntu filesystem between the various different directories I took some time to learn a couple of useful commands including ls with the -a and -l flags and find with the -name and /(dir) flags.
I would commonly find myself typing in find / -name "name of file".txt/log/conf to locate files that I had forgotten where they were stored. The ls -la command became a staple in my search through directories for files I hadn't encountered yet or to aid in setting the permissions of a folder or file.
chmod is another command I became more intimately aware of as I needed to take write permissions away from the /home/user folder before the vsftpd daemon would allow me to connect to the server over port 990 and initialize a TLS session. Overall I had a lot of fun doing this as a practical project, of which I will get some use out of personally for my own home lab.
